<div class="bg-gray-100 min-h-screen">
    <div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8 py-6">
        <div class="mb-8">
            <h1 class="text-2xl font-semibold text-gray-900">All Products</h1>
            <p class="mt-1 text-sm text-gray-500">View and manage all products listed on the platform.</p>
        </div>
        
        <!-- Admin Navigation -->
        <div class="mb-8 border-b border-gray-200">
            <nav class="flex space-x-8">
                <a href="/admin/dashboard" class="border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 px-1 py-4 text-sm font-medium border-b-2">
                    Dashboard
                </a>
                <a href="/admin/products" class="border-primary text-primary px-1 py-4 text-sm font-medium border-b-2">
                    Products
                </a>
                <a href="/admin/categories" class="border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 px-1 py-4 text-sm font-medium border-b-2">
                    Categories
                </a>
            </nav>
        </div>

        <!-- Filter Tabs -->
        <div class="mb-6">
            <div class="border-b border-gray-200">
                <nav class="-mb-px flex space-x-8">
                    <a href="/admin/products" class="<%= !filter || filter === 'all' ? 'border-primary text-primary' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300' %> whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm">
                        All Products
                    </a>
                    <a href="/admin/products?filter=pending" class="<%= filter === 'pending' ? 'border-primary text-primary' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300' %> whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm">
                        Pending Approval
                    </a>
                    <a href="/admin/products?filter=approved" class="<%= filter === 'approved' ? 'border-primary text-primary' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300' %> whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm">
                        Approved
                    </a>
                </nav>
            </div>
        </div>

        <!-- Products Table -->
        <div class="bg-white shadow-md rounded-lg overflow-x-auto">
            <% if(products && products.length > 0){ %>
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Product</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Category</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Farmer</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Price</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Quantity</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Approval</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Added</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                        </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200">
                        <% products.forEach(product => { %>
                            <tr>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="flex items-center">
                                        <div class="flex-shrink-0 h-10 w-10 rounded-full bg-gray-200 flex items-center justify-center">
                                            <% if(product.image_url) { %>
                                                <img src="<%= product.image_url %>" alt="<%= product.title %>" class="h-10 w-10 rounded-full">
                                            <% } else { %>
                                                <svg class="h-6 w-6 text-gray-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
                                                </svg>
                                            <% } %>
                                        </div>
                                        <div class="ml-4">
                                            <div class="text-sm font-medium text-gray-900">
                                                <a href="/admin/products/<%= product.id %>" class="hover:text-primary">
                                                    <%= product.title %>
                                                </a>
                                            </div>
                                            <div class="text-sm text-gray-500 truncate max-w-xs">
                                                <%= product.description || 'No description' %>
                                            </div>
                                        </div>
                                    </div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="text-sm text-gray-900"><%= product.category_name || 'Uncategorized' %></div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="text-sm text-gray-900"><%= product.farmer_name || 'N/A' %></div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="text-sm font-medium text-gray-900">KSh <%= parseFloat(product.price).toFixed(2) %></div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="text-sm text-gray-900"><%= product.quantity %></div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full 
                                        <%= product.status === 'Available' ? 'bg-green-100 text-green-800' : 
                                            product.status === 'Sold' ? 'bg-red-100 text-red-800' :
                                            'bg-yellow-100 text-yellow-800' %>">
                                        <%= product.status || 'Unknown' %>
                                    </span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full 
                                        <%= product.is_approved ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800' %>">
                                        <%= product.is_approved ? 'Approved' : 'Pending' %>
                                    </span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                    <%= product.created_at ? new Date(product.created_at).toLocaleDateString() : '' %>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                                    <% if (!product.is_approved) { %>
                                        <button 
                                            class="text-green-600 hover:text-green-900 mr-2 approve-btn"
                                            data-product-id="<%= product.id %>"
                                            data-action="approve">
                                            Approve
                                        </button>
                                    <% } else { %>
                                        <button 
                                            class="text-red-600 hover:text-red-900 mr-2 reject-btn"
                                            data-product-id="<%= product.id %>"
                                            data-action="reject">
                                            Reject
                                        </button>
                                    <% } %>
                                    <a href="/admin/products/<%= product.id %>" class="text-primary hover:text-primary-dark mr-2">
                                        View
                                    </a>
                                    <button 
                                        class="text-red-600 hover:text-red-900 delete-btn"
                                        data-product-id="<%= product.id %>">
                                        Delete
                                    </button>
                                </td>
                            </tr>
                        <% }); %>
                    </tbody>
                </table>
            <% } else { %>
                <div class="py-12 text-center">
                    <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 13V6a2 2 0 00-2-2H6a2 2 0 00-2 2v7m16 0v5a2 2 0 01-2 2H6a2 2 0 01-2-2v-5m16 0h-2.586a1 1 0 00-.707.293l-2.414 2.414a1 1 0 01-.707.293h-3.172a1 1 0 01-.707-.293l-2.414-2.414A1 1 0 006.586 13H4" />
                    </svg>
                    <h3 class="mt-2 text-sm font-medium text-gray-900">No products</h3>
                    <p class="mt-1 text-sm text-gray-500">There are currently no products listed.</p>
                </div>
            <% } %>
        </div>
    </div>
</div>

<% /* Define extraScripts for the layout */ %>
<% extraScripts = `
<script>
    console.log("Admin product JS loaded");
    document.addEventListener('DOMContentLoaded', function() {
        // Get all approval buttons
        const approveButtons = document.querySelectorAll('.approve-btn, .reject-btn');
        
        // Add click event to each button
        approveButtons.forEach(button => {
            button.addEventListener('click', function() {
                const productId = this.getAttribute('data-product-id');
                const action = this.getAttribute('data-action');
                const approved = action === 'approve';
                
                if (!confirm("Are you sure you want to " + action + " this product?")) {
                    return;
                }
                
                // Disable button to prevent multiple clicks
                this.disabled = true;
                this.classList.add('opacity-50');
                
                // Send approval/rejection request
                fetch("/admin/api/farm/" + productId + "/approve", {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ approved })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Reload the page to show updated status
                        window.location.reload();
                    } else {
                        alert('Error: ' + data.message);
                        // Re-enable button if there was an error
                        this.disabled = false;
                        this.classList.remove('opacity-50');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred. Please try again.');
                    // Re-enable button if there was an error
                    this.disabled = false;
                    this.classList.remove('opacity-50');
                });
            });
        });
        
        // Get all delete buttons
        const deleteButtons = document.querySelectorAll('.delete-btn');
        
        // Add click event to each delete button
        deleteButtons.forEach(button => {
            button.addEventListener('click', function() {
                const productId = this.getAttribute('data-product-id');
                
                if (!confirm('Are you sure you want to delete this product? This action cannot be undone.')) {
                    return;
                }
                
                // Disable button to prevent multiple clicks
                this.disabled = true;
                this.classList.add('opacity-50');
                
                // Send delete request
                fetch("/admin/api/farm/" + productId, {
                    method: 'DELETE'
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Reload the page to show updated list
                        window.location.reload();
                    } else {
                        alert('Error: ' + data.message);
                        // Re-enable button if there was an error
                        this.disabled = false;
                        this.classList.remove('opacity-50');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred. Please try again.');
                    // Re-enable button if there was an error
                    this.disabled = false;
                    this.classList.remove('opacity-50');
                });
            });
        });
    });
</script>
`; %> 